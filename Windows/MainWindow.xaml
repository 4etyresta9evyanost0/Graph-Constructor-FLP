<Window x:Class="Graph_Constructor_FLP.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Graph_Constructor_FLP"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:vm="clr-namespace:Graph_Constructor_FLP.ViewModel"
        xmlns:devxpr="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:devxpri="http://schemas.devexpress.com/winfx/2008/xaml/mvvm/internal"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:Graph_Constructor_FLP.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded" DataContext="{DynamicResource applicationVm}" KeyDown="Window_KeyDown">
    <!--
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"-->
    <Window.Resources>
        <converters:ColorToBrushConverter x:Name="ColorToBrushConverter" x:Key="ColorToBrushConverter"/>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Background="White" BorderBrush="#FF868686" BorderThickness="0,0,0,1">
            <MenuItem Header="Файл">
                <MenuItem Header="Сохранить" Click="SaveButton_Click"></MenuItem>
                <MenuItem Header="Загрузить"></MenuItem>
                <Separator/>
                <MenuItem Header="Выход"></MenuItem>
            </MenuItem>
            <MenuItem Header="Настройки" Click="LoadSettings_Click"></MenuItem>
            <MenuItem Header="Фигуры">
                <MenuItem Header="Убрать все соединения" Click="Delete_All_Edges_Click"/>
                <MenuItem Header="Удалить все фигуры" Click="Delete_All_Objects_Click"/>
            </MenuItem>
            <MenuItem x:Name="debugButton" Header="DEBUG" Click="OpenDebug_Click" Visibility="Collapsed"/>
        </Menu>
        <WrapPanel DockPanel.Dock="Top" Background="#F5F5F5">
            <WrapPanel.Resources>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="Width" Value="40"/>
                    <Setter Property="Height" Value="40"/>
                </Style>
            </WrapPanel.Resources>
            <!--key Q-->
            <RadioButton x:Name="addingButton"
                    Style="{StaticResource {x:Type ToggleButton}}" Width="40" Height="40" Margin="5" Padding="0" ToolTip="Добавить (Й)" Content="{StaticResource ButtonAdd}" 
                    Command="{Binding CanvasActionChangeCommand}" CommandParameter="Adding" Click="SwitchCanvas_Click"/>
            <!--key W-->
            <RadioButton x:Name="movingButton"
                    Style="{StaticResource {x:Type ToggleButton}}" Width="40" Height="40" Margin="5" Padding="0" ToolTip="Переместить (Ц)" Content="{StaticResource ButtonMove}" 
                    Command="{Binding CanvasActionChangeCommand}" CommandParameter="Moving" Click="SwitchCanvas_Click"
                    IsChecked="True"/>
            <!--key E-->
            <RadioButton x:Name="connectingButton"
                    Style="{StaticResource {x:Type ToggleButton}}" Width="40" Height="40" Margin="5" Padding="0" ToolTip="Соединить (У)" Content="{StaticResource ButtonConnect}"
                    Command="{Binding CanvasActionChangeCommand}" CommandParameter="Connecting" Click="SwitchCanvas_Click"/>
            <!--key R-->
            <RadioButton x:Name="deletingButton"
                    Style="{StaticResource {x:Type ToggleButton}}" Width="40" Height="40" Margin="5" Padding="0" ToolTip="Удалить (К)" Content="{StaticResource ButtonDelete}"
                    Command="{Binding CanvasActionChangeCommand}" CommandParameter="Deleting" Click="SwitchCanvas_Click"/>
            <Button x:Name="solveButton"
                    Width="180" Height="40" Margin="5" Padding="0" ToolTip="Решить" Content="Решить задачу" FontSize="24"
                    Command="{Binding CanvasActionChangeCommand}" CommandParameter="Deleting" Click="solveButton_Click"/>
        </WrapPanel>
        <Grid>
            <ListBox x:Name="mainCanvas" 
                     Background="{Binding Settings.CanvasBackgroundColor, Converter={StaticResource ColorToBrushConverter}}" 
                     BorderBrush="Black" 
                     BorderThickness="0,1,0,0" 
                     DockPanel.Dock="Top" 
                     ItemsSource="{Binding ObjectsVm.CanvasObjects}" 
                     MouseDown="Canvas_MouseDown"
                     MouseMove="Canvas_MouseMove" 
                     MouseUp="Canvas_MouseUp"
                     SelectionMode="Extended">
                <ListBox.Resources>
                    <DataTemplate DataType="{x:Type vm:Vertex}">
                        <Grid Margin="0"
                                MouseDown="Vertex_MouseDown"
                                MouseUp="Vertex_MouseUp"
                                MouseMove="Vertex_MouseMove"
                                Cursor="Hand">
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Изменить вершину" Command="{Binding ChangeCommand}" CommandParameter="{DXBinding '@p.DataContext'}"/>
                                    <MenuItem Header="На передний план" Command="{Binding MoveOnTopCommand}"/>
                                    <MenuItem Header="На задний план" Command="{Binding MoveOnBottomCommand}"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <Ellipse
                            Width="{DXBinding Settings.VertexDiameter}"
                            Height="{DXBinding Settings.VertexDiameter}"
                            Stroke="{DXBinding Settings.VertexStrokeColor, Converter={StaticResource ColorToBrushConverter}}"
                            StrokeThickness="{DXBinding Settings.VertexStrokeSize}"
                            Fill="{DXBinding Settings.VertexFillColor, Converter={StaticResource ColorToBrushConverter}}"
                            />
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Name}" 
                               Foreground="{DXBinding Settings.VertexTextColor, Converter={StaticResource ColorToBrushConverter}}"
                               FontSize="{DXBinding Settings.VertexTextSize}"/>
                                <!-- MaxWidth="{DXBinding '@p($StackPAnel).ActualWidth'}"
                               MaxHeight="{DXBinding '@p($StackPAnel).ActualHeight'}"-->
                                <xctk:WatermarkTextBox HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Value}"
                                     BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}"
                                     Foreground="{DXBinding Settings.VertexTextColor, Converter={StaticResource ColorToBrushConverter}}"
                                     FontSize="{DXBinding Settings.VertexTextSize}" Watermark="Значение" PreviewKeyDown="WatermarkTextBox_PreviewKeyDown" AcceptsReturn="False"
                                     IsEnabled="{DXBinding Expr='(int)AppVm.CanvasAction == 1'}">
                                    <!--<xctk:WatermarkTextBox.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger 
                                            </Style.Triggers>
                                        </Style>
                                    </xctk:WatermarkTextBox.Style>-->
                                </xctk:WatermarkTextBox>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type vm:Edge}">
                        <Grid Margin="0" x:Name="Grid"
                            MouseDown="Edge_MouseDown"
                            MouseUp="Edge_MouseUp"
                            MouseMove="Edge_MouseMove"
                            Cursor="Hand">
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Изменить ребро"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <Line x:Name="MainLine"
                            Stroke="{DXBinding Settings.EdgeStrokeColor, Converter={StaticResource ColorToBrushConverter}}"
                            StrokeStartLineCap="Triangle"
                            StrokeEndLineCap="Triangle"
                            StrokeThickness="{DXBinding Settings.EdgeStrokeSize}">
                                <Line.Style>
                                    <Style TargetType="Line">
                                        <!--X1="{DXBinding Expr='VertBegin.Center.X', TargetNullValue={Binding X}}"
                                        Y1="{DXBinding 'VertBegin.Center.Y', TargetNullValue={Binding Y}}"
                                        X2="{DXBinding 'VertEnd.Center.X', TargetNullValue={Binding Width}}"
                                        Y2="{DXBinding 'VertEnd.Center.Y', TargetNullValue={Binding Height}}"-->
                                        <Setter Property="X1" Value="{Binding VertBegin.Center.X}"/>
                                        <Setter Property="Y1" Value="{Binding VertBegin.Center.Y}" />
                                        <Setter Property="X2" Value="{Binding VertEnd.Center.X}" />
                                        <Setter Property="Y2" Value="{Binding VertEnd.Center.Y}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding VertBegin}" Value="{x:Null}">
                                                <Setter Property="X1" Value="{Binding X}"/>
                                                <Setter Property="Y1" Value="{Binding Y}"/>
                                                <Setter Property="X2" Value="{Binding Width}"/>
                                                <Setter Property="Y2" Value="{Binding Height}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Line.Style>
                            </Line>
                            <!--StrokeDashCap в Settings?-->
                        <!--<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <xctk:WatermarkTextBox HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Value}"
                                            BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}"
                                            Foreground="{DXBinding Settings.EdgeTextColor, Converter={StaticResource ColorToBrushConverter}}"
                                            FontSize="{DXBinding Settings.EdgeTextSize}" Watermark="Значение">
                                </xctk:WatermarkTextBox>
                            </StackPanel>-->
                            <xctk:WatermarkTextBox Text="{Binding Value}"
                                                  HorizontalAlignment="Left" VerticalAlignment="Top"
                                                  Margin="{DXBinding Expr='new $Thickness((@e(MainLine).X1 + @e(MainLine).X2)/2 - @s.ActualWidth, (@e(MainLine).Y1 + @e(MainLine).Y2)/2 - @s.ActualHeight ,0,0)'}"
                                     BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}"
                                     Foreground="{DXBinding Settings.EdgeTextColor, Converter={StaticResource ColorToBrushConverter}}"
                                     FontSize="{DXBinding Settings.EdgeTextSize}" Watermark="Значение" PreviewKeyDown="WatermarkTextBox_PreviewKeyDown" AcceptsReturn="False"
                                     IsEnabled="{DXBinding Expr='(int)AppVm.CanvasAction == 1'}">
                                <!-- Margin="{DXBinding 'new $Thickness(X + Width / 2 - @s.ActualWidth, Y + Height / 2 - @s.ActualHeight, 0, 0)'}"
                                    Margin="{DXBinding 'new $Thickness((end + (Begin - end) / 2).X + X, (end + (Begin - end) / 2).Y + Y,0,0)'}"-->
                                <!--<xctk:WatermarkTextBox.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger 
                                            </Style.Triggers>
                                        </Style>
                                    </xctk:WatermarkTextBox.Style>-->
                            </xctk:WatermarkTextBox>
                        </Grid>
                    </DataTemplate>


                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="Border">
                                        <Grid>
                                            <Line x:Name="BorderLine"
                                            X1="{DXBinding VertBegin.Center.X}"
                                            Y1="{DXBinding VertBegin.Center.Y}" 
                                            X2="{DXBinding VertEnd.Center.X}" 
                                            Y2="{DXBinding VertEnd.Center.Y}" 
                                            StrokeStartLineCap="Round"
                                            StrokeEndLineCap="Round"
                                            StrokeThickness="{DXBinding Expr='Settings.EdgeStrokeSize + 9'}"/>
                                            <Line x:Name="BorderLinePadding"
                                            X1="{DXBinding VertBegin.Center.X}"
                                            Y1="{DXBinding VertBegin.Center.Y}"
                                            X2="{DXBinding VertEnd.Center.X}" 
                                            Y2="{DXBinding VertEnd.Center.Y}" 
                                            StrokeStartLineCap="Round"
                                            StrokeEndLineCap="Round"
                                            StrokeThickness="{DXBinding Expr='Settings.EdgeStrokeSize + 8'}"/>
                                            <ContentPresenter Name="ContentPresenter"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--Vertex-->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{DXBinding Expr='@s.DataContext.GetType()'}" Value="{x:Type vm:Vertex}"/>
                                                <Condition Binding="{DXBinding '@s.IsSelected'}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter 
                                                TargetName="Border" 
                                                Property="BorderBrush"
                                                Value="#3e61c2"/>
                                                <Setter 
                                                TargetName="Border" 
                                                Property="Background"
                                                Value="LightBlue"/>
                                                <Setter 
                                                TargetName="Border" 
                                                Property="CornerRadius"
                                                Value="2"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{DXBinding Expr='@s.DataContext.GetType()'}" Value="{x:Type vm:Vertex}"/>
                                                <Condition Binding="{DXBinding '@s.IsMouseOver'}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter 
                                                TargetName="Border" 
                                                Property="BorderBrush"
                                                Value="#3e61c2"/>
                                                <Setter 
                                                TargetName="Border" 
                                                Property="Background"
                                                Value="LightBlue"/>
                                                <Setter 
                                                TargetName="Border" 
                                                Property="Opacity"
                                                Value="0.5"/>
                                                <Setter 
                                                TargetName="Border" 
                                                Property="CornerRadius"
                                                Value="2"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{DXBinding Expr='@s.DataContext.GetType()'}" Value="{x:Type vm:Vertex}">
                                            <Setter
                                            Property="Canvas.Left"
                                            Value="{Binding X}"/>
                                            <Setter
                                            Property="Canvas.Top"
                                            Value="{Binding Y}"/>
                                            <Setter
                                            TargetName="Border"
                                            Property="Padding"
                                            Value="2"/>
                                            <Setter
                                            TargetName="Border"
                                            Property="BorderThickness"
                                            Value="1"/>
                                            <Setter
                                            TargetName="BorderLine"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                            <Setter
                                            TargetName="BorderLinePadding"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                        </DataTrigger>
                                        <!--Edge-->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{DXBinding Expr='@s.DataContext.GetType()'}" Value="{x:Type vm:Edge}"/>
                                                <Condition Binding="{DXBinding '@s.IsSelected'}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter
                                                TargetName="BorderLine"
                                                Property="Stroke"
                                                Value="#3e61c2"/>
                                                <Setter
                                                TargetName="BorderLinePadding"
                                                Property="Stroke"
                                                Value="LightBlue"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{DXBinding Expr='@s.DataContext.GetType()'}" Value="{x:Type vm:Edge}"/>
                                                <Condition Binding="{DXBinding '@s.IsMouseOver'}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter 
                                                TargetName="Border" 
                                                Property="Opacity"
                                                Value="0.5"/>
                                                <Setter
                                                TargetName="BorderLine"
                                                Property="Stroke"
                                                Value="#3e61c2"/>
                                                <Setter
                                                TargetName="BorderLinePadding"
                                                Property="Stroke"
                                                Value="LightBlue"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{DXBinding Expr='@s.DataContext.GetType()'}" Value="{x:Type vm:Edge}">
                                            <Setter
                                            TargetName="Border"
                                            Property="Padding"
                                            Value="0"/>
                                            <!--<Setter
                                            TargetName="BorderLine"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                            <Setter
                                            TargetName="BorderLinePadding"
                                            Property="Visibility"
                                            Value="Collapsed"/>-->
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!---->
                    </Style>
                </ListBox.Resources>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <!--<ListBox.ItemContainerStyle>
                    
                </ListBox.ItemContainerStyle>-->
            </ListBox>
            <!--
        This Canvas and Border are used as a very simple way to render a drag selection rectangle.
        -->
            <Canvas
            x:Name="dragSelectionCanvas"
            Visibility="Collapsed"
            >
                <Border 
                x:Name="dragSelectionBorder"
                BorderBrush="#3e61c2"
                BorderThickness="1"
                Background="LightBlue"
                CornerRadius="1"
                Opacity="0.5"
                />
            </Canvas>
        </Grid>
    </DockPanel>
</Window>
