<Window x:Class="Graph_Constructor_FLP.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Graph_Constructor_FLP"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:vm="clr-namespace:Graph_Constructor_FLP.ViewModel"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:converters="clr-namespace:Graph_Constructor_FLP.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded" DataContext="{DynamicResource applicationVm}" KeyDown="Window_KeyDown">
    <!--
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"-->
    <Window.Resources>
        <converters:ColorToBrushConverter x:Name="ColorToBrushConverter" x:Key="ColorToBrushConverter"/>
        <DataTemplate DataType="{x:Type vm:Vertex}">
            <Grid Margin="0"
                    MouseDown="Vertex_MouseDown"
                    MouseUp="Vertex_MouseUp"
                    MouseMove="Vertex_MouseMove"
                    Cursor="Hand">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Изменить цвет" Command="{Binding FillColorChanged}"/>
                        <MenuItem Header="Стандартный цвет" Command="{Binding SettingStandardFillColor}"/>
                    </ContextMenu>
                </Grid.ContextMenu>
                <Ellipse
                    Width="{DXBinding Settings.VertexDiameter}"
                    Height="{DXBinding Settings.VertexDiameter}"
                    Stroke="{DXBinding Settings.VertexStrokeColor, Converter={StaticResource ColorToBrushConverter}}"
                    StrokeThickness="{DXBinding Settings.VertexStrokeSize}"
                    Fill="{DXBinding Settings.VertexFillColor, Converter={StaticResource ColorToBrushConverter}}"
                    />
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Name}" 
                               Foreground="{DXBinding Settings.VertexTextColor, Converter={StaticResource ColorToBrushConverter}}"
                               FontSize="{DXBinding Settings.VertexTextSize}"/>
                    <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Value}" 
                               Foreground="{DXBinding Settings.VertexTextColor, Converter={StaticResource ColorToBrushConverter}}"
                               FontSize="{DXBinding Settings.VertexTextSize}" Visibility="{DXBinding Expr='Value.HasValue ? `Visible` : `Collapsed`'}">
                    </TextBlock>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Background="White" BorderBrush="#FF868686" BorderThickness="0,0,0,1">
            <MenuItem Header="Файл">
                <MenuItem Header="Сохранить" Click="SaveButton_Click"></MenuItem>
                <MenuItem Header="Загрузить"></MenuItem>
                <Separator/>
                <MenuItem Header="Выход"></MenuItem>
            </MenuItem>
            <MenuItem Header="Настройки" Click="LoadSettings_Click"></MenuItem>
            <MenuItem Header="Фигуры">
                <MenuItem Header="Убрать все соединения" Click="Delete_All_Edges_Click"/>
                <MenuItem Header="Удалить все фигуры" Click="Delete_All_Objects_Click"/>
            </MenuItem>
            <xctk:DropDownButton x:Name="debugButton" Content="DEBUG" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                 DropDownPosition="MousePoint">
                <xctk:DropDownButton.Style>
                    <Style TargetType="xctk:DropDownButton">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </xctk:DropDownButton.Style>
                <xctk:DropDownButton.DropDownContent>
                    <StackPanel>
                        <Label Content="{Binding CanvasAction}"></Label>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="DEBUG__ADD__VERTEX" Margin="5" Height="20" Click="Debug_Click"/>
                            <Button Content="DEBUG__ADD__EDGE"   Margin="5" Height="20" Click="Debug_Click_2"/>
                            <Button Content="DEBUG__SET__VERTEX__BLACK"   Margin="5" Height="20" Click="Debug_Click_3"/>
                            <Button Content="DEBUG__SET__VERTEX__VALUE__RAND"   Margin="5" Height="20" Click="Debug_Click_4"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <ListBox x:Name="_canvLb" ItemsSource="{Binding ObjectsVm.CanvasObjects}" Margin="10" Width="260" Height="200">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type vm:Vertex}">
                                        <TextBlock Text="{Binding Value}"></TextBlock>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <ListBox x:Name="_edgeLb" ItemsSource="{Binding ObjectsVm.Edges}" Margin="10" Width="260" Height="200"/>
                            <ListBox x:Name="_vertLb" ItemsSource="{Binding ObjectsVm.Vertices}" Margin="10" Width="260" Height="200"/>
                        </StackPanel>
                        <!--<Image gif:ImageBehavior.AnimatedSource="..\Resources\masunyakopkdance.gif"/>-->
                    </StackPanel>
                </xctk:DropDownButton.DropDownContent>
            </xctk:DropDownButton>
        </Menu>
        <WrapPanel DockPanel.Dock="Top" Background="#F5F5F5">
            <WrapPanel.Resources>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="Width" Value="40"/>
                    <Setter Property="Height" Value="40"/>
                </Style>
            </WrapPanel.Resources>
            <!--key Q-->
            <RadioButton x:Name="addingButton"
                    Style="{StaticResource {x:Type ToggleButton}}" Width="40" Height="40" Margin="5" Padding="0" ToolTip="Добавить (Й)" Content="{StaticResource ButtonAdd}" 
                    Command="{Binding CanvasActionChangeCommand}" CommandParameter="Adding" Click="SwitchCanvas_Click"/>
            <!--key W-->
            <RadioButton x:Name="movingButton"
                    Style="{StaticResource {x:Type ToggleButton}}" Width="40" Height="40" Margin="5" Padding="0" ToolTip="Переместить (Ц)" Content="{StaticResource ButtonMove}" 
                    Command="{Binding CanvasActionChangeCommand}" CommandParameter="Moving" Click="SwitchCanvas_Click"
                    IsChecked="True"/>
            <!--key E-->
            <RadioButton x:Name="connectingButton"
                    Style="{StaticResource {x:Type ToggleButton}}" Width="40" Height="40" Margin="5" Padding="0" ToolTip="Соединить (У)" Content="{StaticResource ButtonConnect}"
                    Command="{Binding CanvasActionChangeCommand}" CommandParameter="Connecting" Click="SwitchCanvas_Click"/>
            <!--key R-->
            <RadioButton x:Name="deletingButton"
                    Style="{StaticResource {x:Type ToggleButton}}" Width="40" Height="40" Margin="5" Padding="0" ToolTip="Удалить (К)" Content="{StaticResource ButtonDelete}"
                    Command="{Binding CanvasActionChangeCommand}" CommandParameter="Deleting" Click="SwitchCanvas_Click"/>
            <!--<Button Width="20" Height="20" Margin="2" Padding="0" ToolTip="Изменить" Content="{StaticResource ButtonChange}"></Button>-->
        </WrapPanel>
        <Grid>
            <ListBox x:Name="mainCanvas" 
                     Background="#CCC" 
                     BorderBrush="Black" 
                     BorderThickness="0,1,0,0" 
                     DockPanel.Dock="Top" 
                     ItemsSource="{Binding ObjectsVm.CanvasObjects}" 
                     MouseDown="Canvas_MouseDown"
                     MouseMove="Canvas_MouseMove" 
                     MouseUp="Canvas_MouseUp"
                     SelectionMode="Extended">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style
                        TargetType="ListBoxItem"
                        >
                        <Setter
                            Property="Canvas.Left"
                            Value="{Binding X}"
                            />
                        <Setter
                            Property="Canvas.Top"
                            Value="{Binding Y}"
                            />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border 
                                        Name="Border"
                                        BorderThickness="1"
                                        Padding="2">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--When the ListBoxItem is selected draw a simple blue border around it.-->
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter 
                                                TargetName="Border" 
                                                Property="BorderBrush"
                                                Value="#3e61c2"/>
                                            <Setter 
                                                TargetName="Border" 
                                                Property="Background"
                                                Value="LightBlue"/>
                                            <Setter 
                                                TargetName="Border" 
                                                Property="CornerRadius"
                                                Value="2"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter 
                                                TargetName="Border" 
                                                Property="BorderBrush"
                                                Value="#3e61c2"/>
                                            <Setter 
                                                TargetName="Border" 
                                                Property="Background"
                                                Value="LightBlue"/>
                                            <Setter 
                                                TargetName="Border" 
                                                Property="Opacity"
                                                Value="0.5"/>
                                            <Setter 
                                                TargetName="Border" 
                                                Property="CornerRadius"
                                                Value="2"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!---->
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <!--
        This Canvas and Border are used as a very simple way to render a drag selection rectangle.
        -->
            <Canvas
            x:Name="dragSelectionCanvas"
            Visibility="Collapsed"
            >
                <Border 
                x:Name="dragSelectionBorder"
                BorderBrush="#3e61c2"
                BorderThickness="1"
                Background="LightBlue"
                CornerRadius="1"
                Opacity="0.5"
                />
            </Canvas>
        </Grid>
    </DockPanel>
</Window>
