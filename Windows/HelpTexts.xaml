<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FlowDocument x:Key="commonHelp">
        <Paragraph>
            Программа «Решение задачи размещения» позволяет визуально построить граф и найти решения для одной из двух типов задач размещения, минисумной и минимаксной. Пользователь может создавать вершины и соединять их рёбрами, задавая им значения для последующих вычислений.
        </Paragraph>
        <Paragraph>
            В программе представлен элемент управления в виде выделения – выделенные элементы можно при зажатии курсора перемещать. Также можно использовать выделение для удаления большого количества элементов. Некоторые действия назначены на кнопки клавиатуры, чтобы можно было быстрее пользоваться программой (кнопки «Й», «Ц», «У», «К», и «DEL»).
        </Paragraph>
        <Paragraph>
            Основной раздел этой программы – это основное меню, представленое пятью кнопками и двумя флаговыми кнопками. Есть верхнее меню, представленое пунктами «Настройки», «Фигуры» и «Справка».
        </Paragraph>
        <Paragraph>
            В пункте «Настройки» открывается меню настроек программы. В нём можно задать то, как визуально выглядит программа, от шрифтов до цветов. Также там есть опция, которая скрывает предупреждения при удалении элементов, делая это мгновенно, по запросу пользователя.
        </Paragraph>
        <Paragraph>
            В пункте «Фигуры» представлено три кнопки: «Приравнять пустые значения к 0», «Убрать все фигуры» и «Убрать все соединения». Эти пункты делают то, что в них написано. Первый полезен тем, что позволяет не задавать каждому незаполненному объекту значение 0, если оно нужно, а сразу поставить его всем подобным объектам, но пользователю следует понимать, что нулевые значения сильно влияют на результат. Второй полезен, когда нужно создать новый граф, без того, чтобы удалять каждый элемент. Третий полезен, когда нужно переназначить все рёбра.
        </Paragraph>
        <Paragraph>
            Основное меню представлено 4 кнопками управления, кнопкой решения задач и двумя флажками, позволяющие включать и отключать выделения для вершин или для рёбер. Кнопкам назначены клавиши на клавиатуре в том же порядке, что и их расположение (от «Й» до «К»), а для кнопки «DEL» назначена функция удаления выделенных элементов.
        </Paragraph>
        <Paragraph>
            Первая кнопка, «Добавить», позволяет добавлять вершины, а также редактировать их значения и значения рёбер. Использовать на пустом месте левой кнопкой мыши.
        </Paragraph>
        <Paragraph>
            Вторая кнопка, «Переместить», позволяет передвигать предметы и выделять их при помощи мыши. Для выделения нужно зажать мышь на пустом месте, а для перемещения зажать её на вершине.
        </Paragraph>
        <Paragraph>
            Третья кнопка, «Соединить», позволяет создавать рёбра между вершинами. Для этого нужно нажать на одной вершине и отпустить клавишу мыши на другой.
        </Paragraph>
        <Paragraph>
            Четвёртая кнопка, «Удалить», позволяет удалять вершины и рёбра. Для удаления элементов, необходимо кликнуть по нему, либо выделить один или множество элементов.
        </Paragraph>
        <Paragraph>
            При этом, если отключен соответствующий пункт в настройках, будет появляться сообщение, предупреждающее о необратимости этого действия.
        </Paragraph>
    </FlowDocument>
    <FlowDocument x:Key="programmerHelp">
        <Paragraph>
            Программа имеет встроенный режим для отладки приложения. Для этого необходимо запустить программу с консольным параметром “-debug”. С ним, программа откроет ещё одну кнопку в верхнем меню приложения “DEBUG”, зайдя в которую можно посмотреть отладочную информацию, которая не предназначена для пользователя, а также кнопки, которые должны использоваться только тогда, когда необходимо протестировать какие-либо изменения в программе, но не во время обычного её использования во избежания каких-либо дальнейших или сопутствующих неполадок и ошибок.
        </Paragraph>
        <Paragraph>
            Такой способ доступа к отладочному режиму позволяет минимизировать вероятность, что пользователь сможет что-то сломать в программе, поэтому при внесении изменений в программу, не рекомендуется изменять этот аспект программы.
        </Paragraph>
        <Paragraph>
            При внесении изменений в программу, необходимо учитывать, что программа написана с использованием паттерна программирования MVVM (Model-View-ViewModel) и рекомендуется придерживаться его при внесении новых моделей и необходимости в их графическом представлении. Этот паттерн необходим для разработки приложений на платформе Windows Presentation Platform, на которой и работает данная программа.
        </Paragraph>
        <Paragraph>
            Для программы написана библиотека (Graphs.cs) для логической работы с графами, поддерживающая также, например, направленные графы. При необходимости, в неё можно внести изменения, так как она напрямую вставлена в приложение.
        </Paragraph>
    </FlowDocument>
</ResourceDictionary>